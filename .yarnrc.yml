# This configuration sets the node linker to use the traditional node_modules structure.
# This means Yarn will create a node_modules directory and place all dependencies there.
nodeLinker: node-modules

# This configuration specifies the path to the specific Yarn version to be used for this project.
# The specified version is 3.6.4, and the path is relative to the project's root directory.
yarnPath: .yarn/releases/yarn-3.6.4.cjs
# Detailed Explanation:
# - **nodeLinker**:
#   - This setting defines how Yarn will manage and link dependencies.
#   - `node-modules`: This is the traditional Node.js module resolution strategy where Yarn creates a `node_modules` directory and places all dependencies inside it.
#   - This setting is chosen for compatibility with most Node.js tools and workflows.
#
# - **yarnPath**:
#   - This setting specifies the path to the Yarn binary to be used for this project.
#   - By specifying a versioned Yarn binary (in this case, Yarn 3.6.4), it ensures consistency in dependency management and Yarn behavior across different environments and developers.
#   - The path `.yarn/releases/yarn-3.6.4.cjs` is relative to the root directory of the project.
#   - This allows the project to use a specific Yarn version without requiring it to be globally installed.
#
# Usage:
# - This `yarnrc.yml` file should be placed in the root of your project directory.
# - It configures Yarn to use the specified node linker strategy and the specified Yarn binary version.
# - Ensure that the specified Yarn binary exists at the given path.
# - Run Yarn commands as usual (e.g., `yarn install`, `yarn add <package>`) and Yarn will adhere to the configurations set in this file.
#
# Benefits:
# - Ensures consistency in how dependencies are managed and linked across different environments.
# - Locks the project to a specific Yarn version, avoiding issues that might arise from using different Yarn versions.
# - Provides a clear configuration for anyone working on the project, ensuring they use the correct tools and settings.

